import { Account } from "../account";
import { Logger } from "../log";
import * as base from "./base";
import * as api from "./generated/core/api";
import * as models from "./generated/core/models";
import { SIPReportResponseDTO } from "./generated/core/models";
export declare class SipEndpointApi extends base.Api<api.SIPEndpointApi> {
    constructor(account: Account, log: Logger);
    deleteConfig(name: string, options?: {
        quiet?: boolean;
    }): Promise<void>;
    createConfig(request: models.SIPEndpointAddDTO): Promise<models.SIPEndpointResponseDTO>;
    getConfigByName(name: string): Promise<models.SIPEndpointResponseDTO>;
    listConfigs(): Promise<models.SIPEndpointResponseDTO[]>;
    updateConfig(name: string, request: models.SIPEndpointPatchDTO): Promise<models.SIPEndpointResponseDTO>;
    getInboundCalls(fromDate: string | undefined, toDate: string | undefined, fromStatus: number | undefined, toStatus: number | undefined, skip: number, take: number): Promise<SIPReportResponseDTO[]>;
    getEndpointStatus(endpointId: string, errThreshold: number | undefined): Promise<string | undefined>;
}
