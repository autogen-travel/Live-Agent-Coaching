"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageId = void 0;
/**
 *
 * @export
 * @enum {string}
 */
exports.MessageId = {
    UnspecifiedMessage: 'UnspecifiedMessage',
    TimeoutTickMessage: 'TimeoutTickMessage',
    AsyncBlockCommunicationMessage: 'AsyncBlockCommunicationMessage',
    BridgeSessionChannelMessage: 'BridgeSessionChannelMessage',
    JobCommunicationMessage: 'JobCommunicationMessage',
    JobCommunicationDebugMessage: 'JobCommunicationDebugMessage',
    StateSwitch: 'StateSwitch',
    UnbridgeSessionChannelMessage: 'UnbridgeSessionChannelMessage',
    CancellationMessage: 'CancellationMessage',
    ConfigurationChannelMessage: 'ConfigurationChannelMessage',
    SetVadPauseLengthChannelMessage: 'SetVadPauseLengthChannelMessage',
    SpeechToTextInfoMessage: 'SpeechToTextInfoMessage',
    ClosedSessionChannelMessage: 'ClosedSessionChannelMessage',
    CloseSessionChannelMessage: 'CloseSessionChannelMessage',
    FailedOpenSessionChannelMessage: 'FailedOpenSessionChannelMessage',
    ListenSessionChannelMessage: 'ListenSessionChannelMessage',
    OpenedSessionChannelMessage: 'OpenedSessionChannelMessage',
    OpeningSessionChannelMessage: 'OpeningSessionChannelMessage',
    OpenSessionChannelMessage: 'OpenSessionChannelMessage',
    IdleMessage: 'IdleMessage',
    LogMessage: 'LogMessage',
    FinishedPlayingAudioChannelMessage: 'FinishedPlayingAudioChannelMessage',
    InterruptNotificationChannelMessage: 'InterruptNotificationChannelMessage',
    StoppedPlayingAudioChannelMessage: 'StoppedPlayingAudioChannelMessage',
    StopPlayingAudioChannelMessage: 'StopPlayingAudioChannelMessage',
    PreparationBatchRequestMessage: 'PreparationBatchRequestMessage',
    PreparationRequestMessage: 'PreparationRequestMessage',
    RawTextChannelMessage: 'RawTextChannelMessage',
    SendDtmfSessionChannelMessage: 'SendDTMFSessionChannelMessage',
    ForwardSessionChannelMessage: 'ForwardSessionChannelMessage',
    ProtocolSpecificMessage: 'ProtocolSpecificMessage',
    RecognizedSpeechMessage: 'RecognizedSpeechMessage',
    RequestRecognizeMessage: 'RequestRecognizeMessage',
    SpeechChannelMessage: 'SpeechChannelMessage',
    TerminatedSessionChannelMessage: 'TerminatedSessionChannelMessage',
    TerminateSessionChannelMessage: 'TerminateSessionChannelMessage',
    VersionMessage: 'VersionMessage',
    SttSelectionMessage: 'SttSelectionMessage',
    JobDataMessage: 'JobDataMessage',
    JobAdditionalInformationMessage: 'JobAdditionalInformationMessage',
    GptStartMessage: 'GptStartMessage',
    GptResponseMessage: 'GptResponseMessage',
    GptFunctionCallRequestMessage: 'GptFunctionCallRequestMessage',
    GptFunctionCallResponseMessage: 'GptFunctionCallResponseMessage',
    RequestRecognizeDirectMessage: 'RequestRecognizeDirectMessage',
    RecognizedDirectMessage: 'RecognizedDirectMessage',
    EventUsageMessage: 'EventUsageMessage',
    InWaitStateMessage: 'InWaitStateMessage',
    TriggerMessage: 'TriggerMessage',
    LanguageDetectedMessage: 'LanguageDetectedMessage',
    BridgedSessionChannelMessage: 'BridgedSessionChannelMessage',
    UnbridgedSessionChannelMessage: 'UnbridgedSessionChannelMessage',
    ConfigurationResponseChannelMessage: 'ConfigurationResponseChannelMessage',
    SendedDtmfSessionChannelMessage: 'SendedDTMFSessionChannelMessage',
    RecognitionConfigurationRequestMessage: 'RecognitionConfigurationRequestMessage',
    RecognitionConfigurationResponseMessage: 'RecognitionConfigurationResponseMessage',
    NoiseConfigurationRequestMessage: 'NoiseConfigurationRequestMessage',
    NoiseConfigurationResponseMessage: 'NoiseConfigurationResponseMessage',
    SdkEventMessage: 'SDKEventMessage'
};
//# sourceMappingURL=message-id.js.map