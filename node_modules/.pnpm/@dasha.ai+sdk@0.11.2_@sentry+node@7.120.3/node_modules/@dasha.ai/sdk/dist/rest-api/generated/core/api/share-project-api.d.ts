/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { FileStorageItem } from '../models';
import type { SharedProjectDescriptionResponseDTO } from '../models';
import type { SharedStateType } from '../models';
/**
 * ShareProjectApi - axios parameter creator
 * @export
 */
export declare const ShareProjectApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {SharedStateType} [type]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectGet: (type?: SharedStateType, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdContentGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFileDelete: (id: string, path?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFileGet: (id: string, path?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {File} body
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFilePost: (id: string, body: File, path?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdListGet: (id: string, path?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {boolean} [sharedAccessValue]
     * @param {boolean} [sharedAccessHasValue]
     * @param {string} [customMetaDataValue]
     * @param {boolean} [customMetaDataHasValue]
     * @param {File} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdPatch: (id: string, nameValue?: string, nameHasValue?: boolean, descriptionValue?: string, descriptionHasValue?: boolean, sharedAccessValue?: boolean, sharedAccessHasValue?: boolean, customMetaDataValue?: string, customMetaDataHasValue?: boolean, body?: File, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdStatGet: (id: string, path?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {File} body
     * @param {boolean} [sharedAccess]
     * @param {string} [customMetaData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectPost: (name: string, description: string, body: File, sharedAccess?: boolean, customMetaData?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ShareProjectApi - functional programming interface
 * @export
 */
export declare const ShareProjectApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {SharedStateType} [type]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectGet(type?: SharedStateType, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SharedProjectDescriptionResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdContentGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFileDelete(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFileGet(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     *
     * @param {string} id
     * @param {File} body
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFilePost(id: string, body: File, path?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdListGet(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FileStorageItem>>>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {boolean} [sharedAccessValue]
     * @param {boolean} [sharedAccessHasValue]
     * @param {string} [customMetaDataValue]
     * @param {boolean} [customMetaDataHasValue]
     * @param {File} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdPatch(id: string, nameValue?: string, nameHasValue?: boolean, descriptionValue?: string, descriptionHasValue?: boolean, sharedAccessValue?: boolean, sharedAccessHasValue?: boolean, customMetaDataValue?: string, customMetaDataHasValue?: boolean, body?: File, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdStatGet(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FileStorageItem>>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {File} body
     * @param {boolean} [sharedAccess]
     * @param {string} [customMetaData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectPost(name: string, description: string, body: File, sharedAccess?: boolean, customMetaData?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
};
/**
 * ShareProjectApi - factory interface
 * @export
 */
export declare const ShareProjectApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {SharedStateType} [type]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectGet(type?: SharedStateType, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdContentGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<string>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdDelete(id: string, options?: RawAxiosRequestConfig): AxiosPromise<SharedProjectDescriptionResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFileDelete(id: string, path?: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFileGet(id: string, path?: string, options?: RawAxiosRequestConfig): AxiosPromise<string>;
    /**
     *
     * @param {string} id
     * @param {File} body
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdFilePost(id: string, body: File, path?: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<SharedProjectDescriptionResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdListGet(id: string, path?: string, options?: RawAxiosRequestConfig): AxiosPromise<Array<FileStorageItem>>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {boolean} [sharedAccessValue]
     * @param {boolean} [sharedAccessHasValue]
     * @param {string} [customMetaDataValue]
     * @param {boolean} [customMetaDataHasValue]
     * @param {File} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdPatch(id: string, nameValue?: string, nameHasValue?: boolean, descriptionValue?: string, descriptionHasValue?: boolean, sharedAccessValue?: boolean, sharedAccessHasValue?: boolean, customMetaDataValue?: string, customMetaDataHasValue?: boolean, body?: File, options?: RawAxiosRequestConfig): AxiosPromise<SharedProjectDescriptionResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdStatGet(id: string, path?: string, options?: RawAxiosRequestConfig): AxiosPromise<FileStorageItem>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {File} body
     * @param {boolean} [sharedAccess]
     * @param {string} [customMetaData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectPost(name: string, description: string, body: File, sharedAccess?: boolean, customMetaData?: string, options?: RawAxiosRequestConfig): AxiosPromise<SharedProjectDescriptionResponseDTO>;
};
/**
 * ShareProjectApi - object-oriented interface
 * @export
 * @class ShareProjectApi
 * @extends {BaseAPI}
 */
export declare class ShareProjectApi extends BaseAPI {
    /**
     *
     * @param {SharedStateType} [type]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectGet(type?: SharedStateType, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO[], any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdContentGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdFileDelete(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdFileGet(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
    /**
     *
     * @param {string} id
     * @param {File} body
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdFilePost(id: string, body: File, path?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdListGet(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FileStorageItem[], any>>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {boolean} [sharedAccessValue]
     * @param {boolean} [sharedAccessHasValue]
     * @param {string} [customMetaDataValue]
     * @param {boolean} [customMetaDataHasValue]
     * @param {File} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdPatch(id: string, nameValue?: string, nameHasValue?: boolean, descriptionValue?: string, descriptionHasValue?: boolean, sharedAccessValue?: boolean, sharedAccessHasValue?: boolean, customMetaDataValue?: string, customMetaDataHasValue?: boolean, body?: File, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {string} [path]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdStatGet(id: string, path?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FileStorageItem, any>>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {File} body
     * @param {boolean} [sharedAccess]
     * @param {string} [customMetaData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectPost(name: string, description: string, body: File, sharedAccess?: boolean, customMetaData?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO, any>>;
}
