/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SessionLogResponseDTO } from '../models';
import type { TaskStatus } from '../models';
/**
 * SessionLogApi - axios parameter creator
 * @export
 */
export declare const SessionLogApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsDebugJobIdGet: (jobId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [fromCompletedTime]
     * @param {string} [toCompletedTime]
     * @param {TaskStatus} [taskStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsEntitiesGet: (fromCompletedTime?: string, toCompletedTime?: string, taskStatus?: TaskStatus, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsEntityJobIdGet: (jobId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SessionLogApi - functional programming interface
 * @export
 */
export declare const SessionLogApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsDebugJobIdGet(jobId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [fromCompletedTime]
     * @param {string} [toCompletedTime]
     * @param {TaskStatus} [taskStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsEntitiesGet(fromCompletedTime?: string, toCompletedTime?: string, taskStatus?: TaskStatus, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SessionLogResponseDTO>>>;
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsEntityJobIdGet(jobId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SessionLogResponseDTO>>;
};
/**
 * SessionLogApi - factory interface
 * @export
 */
export declare const SessionLogApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsDebugJobIdGet(jobId: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} [fromCompletedTime]
     * @param {string} [toCompletedTime]
     * @param {TaskStatus} [taskStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsEntitiesGet(fromCompletedTime?: string, toCompletedTime?: string, taskStatus?: TaskStatus, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SessionLogResponseDTO>>;
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1LogsEntityJobIdGet(jobId: string, options?: RawAxiosRequestConfig): AxiosPromise<SessionLogResponseDTO>;
};
/**
 * SessionLogApi - object-oriented interface
 * @export
 * @class SessionLogApi
 * @extends {BaseAPI}
 */
export declare class SessionLogApi extends BaseAPI {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SessionLogApi
     */
    apiV1LogsDebugJobIdGet(jobId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [fromCompletedTime]
     * @param {string} [toCompletedTime]
     * @param {TaskStatus} [taskStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SessionLogApi
     */
    apiV1LogsEntitiesGet(fromCompletedTime?: string, toCompletedTime?: string, taskStatus?: TaskStatus, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SessionLogResponseDTO[], any>>;
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SessionLogApi
     */
    apiV1LogsEntityJobIdGet(jobId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SessionLogResponseDTO, any>>;
}
