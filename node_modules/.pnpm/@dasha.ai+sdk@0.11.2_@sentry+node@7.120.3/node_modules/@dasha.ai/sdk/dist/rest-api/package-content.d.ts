import { Account } from "../account";
import { Logger } from "../log";
import * as base from "./base";
import * as api from "./generated/core/api";
import * as models from "./generated/core/models";
export declare class PackageContentApi extends base.Api<api.PackageContentApi> {
    constructor(account: Account, log: Logger);
    getDescriptions(name: string, version: string, skip?: number, take?: number): Promise<models.PackageContentDescriptionDTO[]>;
    getDescriptionsById(versionId: string, skip?: number, take?: number): Promise<models.PackageContentDescriptionDTO[]>;
    getDescription(name: string, version: string): Promise<models.PackageContentDescriptionDTO>;
    getDescriptionByVersionId(versionId: string): Promise<models.PackageContentDescriptionDTO>;
    getDescriptionById(contentId: string): Promise<models.PackageContentDescriptionDTO>;
    getContent(name: string, version: string): Promise<{
        content: Buffer;
        contentType: any;
    }>;
    getContentById(contentId: string): Promise<{
        content: Buffer;
        contentType: any;
    }>;
    getContentByVersionId(versionId: string): Promise<{
        content: Buffer;
        contentType: any;
    }>;
    uploadById(versionId: string, description: string, packageContent: File): Promise<models.PackageContentDescriptionDTO>;
    upload(name: string, version: string, description: string, packageContent: File): Promise<models.PackageContentDescriptionDTO>;
}
