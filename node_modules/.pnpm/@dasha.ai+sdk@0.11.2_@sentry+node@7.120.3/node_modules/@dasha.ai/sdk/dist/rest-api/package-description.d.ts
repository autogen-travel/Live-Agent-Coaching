import { Account } from "../account";
import { Logger } from "../log";
import * as base from "./base";
import * as api from "./generated/core/api";
import * as models from "./generated/core/models";
export interface PackageDescriptionCreateOrUpdateDTO {
    name: string;
    title: string;
    description: string;
    type: models.PackageContentType;
    licenseText?: string | null;
    isHidden?: boolean | null;
    language?: string | null;
    copyright?: string | null;
    email?: string | null;
    projectUrl?: string | null;
    tags?: Array<string> | null;
}
export declare class PackageDescriptionApi extends base.Api<api.PackageDescriptionApi> {
    constructor(account: Account, log: Logger);
    getDescription(name: string): Promise<models.PackageDescriptionDTO>;
    getDescriptions(contentType?: models.PackageContentType, ownerId?: string, skip?: number, take?: number): Promise<models.PackageDescriptionDTO[]>;
    getDescriptionById(packageId: string): Promise<models.PackageDescriptionDTO>;
    createOrUpdate(request: PackageDescriptionCreateOrUpdateDTO): Promise<models.PackageDescriptionDTO>;
}
