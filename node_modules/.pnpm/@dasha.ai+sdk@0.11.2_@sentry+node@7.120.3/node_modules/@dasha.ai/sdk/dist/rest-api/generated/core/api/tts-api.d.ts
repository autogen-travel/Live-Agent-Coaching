/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CartesiaMode } from '../models';
import type { ListOptions } from '../models';
import type { TtsClonePatchDto } from '../models';
import type { TtsCloneResponseDto } from '../models';
import type { TtsGroupResponseDTO } from '../models';
import type { TtsProvider } from '../models';
import type { TtsSynthesisRequestDTO } from '../models';
/**
 * TtsApi - axios parameter creator
 * @export
 */
export declare const TtsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {TtsClonePatchDto} [ttsClonePatchDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdPatch: (id: string, ttsClonePatchDto?: TtsClonePatchDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {string} language
     * @param {TtsProvider} provider
     * @param {boolean} [providerSpecificElevenLabsRemoveBackgroundNoise]
     * @param {CartesiaMode} [providerSpecificCartesiaMode]
     * @param {boolean} [providerSpecificCartesiaEnhance]
     * @param {string} [providerSpecificCartesiaTranscript]
     * @param {Array<File>} [audios]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsClonePost: (name: string, description: string, language: string, provider: TtsProvider, providerSpecificElevenLabsRemoveBackgroundNoise?: boolean, providerSpecificCartesiaMode?: CartesiaMode, providerSpecificCartesiaEnhance?: boolean, providerSpecificCartesiaTranscript?: string, audios?: Array<File>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsGet: (names?: Array<string>, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsSynthesisPost: (ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {ListOptions} [showOptions]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsVoicesGet: (showOptions?: ListOptions, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TtsApi - functional programming interface
 * @export
 */
export declare const TtsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TtsCloneResponseDto>>;
    /**
     *
     * @param {string} id
     * @param {TtsClonePatchDto} [ttsClonePatchDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdPatch(id: string, ttsClonePatchDto?: TtsClonePatchDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TtsCloneResponseDto>>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {string} language
     * @param {TtsProvider} provider
     * @param {boolean} [providerSpecificElevenLabsRemoveBackgroundNoise]
     * @param {CartesiaMode} [providerSpecificCartesiaMode]
     * @param {boolean} [providerSpecificCartesiaEnhance]
     * @param {string} [providerSpecificCartesiaTranscript]
     * @param {Array<File>} [audios]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsClonePost(name: string, description: string, language: string, provider: TtsProvider, providerSpecificElevenLabsRemoveBackgroundNoise?: boolean, providerSpecificCartesiaMode?: CartesiaMode, providerSpecificCartesiaEnhance?: boolean, providerSpecificCartesiaTranscript?: string, audios?: Array<File>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TtsCloneResponseDto>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<TtsGroupResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TtsGroupResponseDTO>>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsSynthesisPost(ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {ListOptions} [showOptions]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsVoicesGet(showOptions?: ListOptions, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<TtsCloneResponseDto>>>;
};
/**
 * TtsApi - factory interface
 * @export
 */
export declare const TtsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdDelete(id: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<TtsCloneResponseDto>;
    /**
     *
     * @param {string} id
     * @param {TtsClonePatchDto} [ttsClonePatchDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsCloneIdPatch(id: string, ttsClonePatchDto?: TtsClonePatchDto, options?: RawAxiosRequestConfig): AxiosPromise<TtsCloneResponseDto>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {string} language
     * @param {TtsProvider} provider
     * @param {boolean} [providerSpecificElevenLabsRemoveBackgroundNoise]
     * @param {CartesiaMode} [providerSpecificCartesiaMode]
     * @param {boolean} [providerSpecificCartesiaEnhance]
     * @param {string} [providerSpecificCartesiaTranscript]
     * @param {Array<File>} [audios]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsClonePost(name: string, description: string, language: string, provider: TtsProvider, providerSpecificElevenLabsRemoveBackgroundNoise?: boolean, providerSpecificCartesiaMode?: CartesiaMode, providerSpecificCartesiaEnhance?: boolean, providerSpecificCartesiaTranscript?: string, audios?: Array<File>, options?: RawAxiosRequestConfig): AxiosPromise<TtsCloneResponseDto>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<TtsGroupResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsGroupsIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<TtsGroupResponseDTO>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsSynthesisPost(ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {ListOptions} [showOptions]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1TtsVoicesGet(showOptions?: ListOptions, options?: RawAxiosRequestConfig): AxiosPromise<Array<TtsCloneResponseDto>>;
};
/**
 * TtsApi - object-oriented interface
 * @export
 * @class TtsApi
 * @extends {BaseAPI}
 */
export declare class TtsApi extends BaseAPI {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsCloneIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsCloneIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TtsCloneResponseDto, any>>;
    /**
     *
     * @param {string} id
     * @param {TtsClonePatchDto} [ttsClonePatchDto]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsCloneIdPatch(id: string, ttsClonePatchDto?: TtsClonePatchDto, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TtsCloneResponseDto, any>>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {string} language
     * @param {TtsProvider} provider
     * @param {boolean} [providerSpecificElevenLabsRemoveBackgroundNoise]
     * @param {CartesiaMode} [providerSpecificCartesiaMode]
     * @param {boolean} [providerSpecificCartesiaEnhance]
     * @param {string} [providerSpecificCartesiaTranscript]
     * @param {Array<File>} [audios]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsClonePost(name: string, description: string, language: string, provider: TtsProvider, providerSpecificElevenLabsRemoveBackgroundNoise?: boolean, providerSpecificCartesiaMode?: CartesiaMode, providerSpecificCartesiaEnhance?: boolean, providerSpecificCartesiaTranscript?: string, audios?: Array<File>, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TtsCloneResponseDto, any>>;
    /**
     *
     * @param {Array<string>} [names]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsGroupsGet(names?: Array<string>, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO[], any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsGroupsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TtsGroupResponseDTO, any>>;
    /**
     *
     * @param {TtsSynthesisRequestDTO} [ttsSynthesisRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsSynthesisPost(ttsSynthesisRequestDTO?: TtsSynthesisRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {ListOptions} [showOptions]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TtsApi
     */
    apiV1TtsVoicesGet(showOptions?: ListOptions, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TtsCloneResponseDto[], any>>;
}
