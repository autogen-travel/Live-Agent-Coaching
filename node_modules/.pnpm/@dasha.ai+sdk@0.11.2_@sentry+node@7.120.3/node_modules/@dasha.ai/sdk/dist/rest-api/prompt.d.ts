import { Account } from "../account";
import { Logger } from "../log";
import * as base from "./base";
import * as api from "./generated/testsystem/api";
import * as models from "./generated/testsystem/models";
export declare class PromptApi extends base.Api<api.PromptApi> {
    constructor(account: Account, log: Logger);
    addPrompt(request: models.PromptCreateDTO): Promise<models.TestPromptDTO>;
    deletePrompt(id: string): Promise<models.TestPromptDTO>;
    updatePrompt(id: string, request: models.PromptPatchDTO): Promise<models.TestPromptDTO>;
    getPrompt(id: string): Promise<models.TestPromptDTO>;
    listPrompts(skip?: number | undefined, take?: number | undefined): Promise<models.TestPromptDTO[]>;
    listPromptVersions(promptId: string, skip?: number | undefined, take?: number | undefined): Promise<models.PromptVersionDTO[]>;
    addPromptVersion(promptId: string, dto: models.PromptVersionCreateDTO): Promise<models.PromptVersionDTO>;
    deletePromptVersion(promptId: string): Promise<models.PromptVersionDTO>;
    callPrompt(dto: models.PromptCallRequestDTO, environment?: string, version?: string): Promise<models.PromptCallResponseDTO>;
}
