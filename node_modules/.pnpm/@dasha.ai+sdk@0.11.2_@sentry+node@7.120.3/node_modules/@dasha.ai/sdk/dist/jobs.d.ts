import { Account } from "./account";
import { TaskStatus as InternalTaskStatus } from "./rest-api/generated/core";
export type TaskStatus = InternalTaskStatus;
export interface SessionLogEntity {
    /**
     * Server-side job identification
     * @type {string}
     * @memberof SessionLogEntity
     */
    id: string;
    /**
     * Used application identification for this job
     * @type {string}
     * @memberof SessionLogEntity
     */
    applicationId: string;
    /**
     * Provided customer identification
     * @type {string}
     * @memberof SessionLogEntity
     */
    customerJobId: string;
    /**
     *
     * @type {string}
     * @memberof SessionLogEntity
     */
    queueTimeFrom: string;
    /**
     *
     * @type {string}
     * @memberof SessionLogEntity
     */
    queueTimeTo: string;
    /**
     *
     * @type {number}
     * @memberof SessionLogEntity
     */
    priority: number;
    /**
     *
     * @type {'Unspecified' | 'Starting' | 'TimedOut' | 'Failed' | 'Completed' | 'Rejected'}
     * @memberof SessionLogEntity
     */
    status: 'Unspecified' | 'Starting' | 'TimedOut' | 'Failed' | 'Completed' | 'Rejected';
    /**
     *
     * @type {string}
     * @memberof SessionLogEntity
     */
    completedTime: string;
    /**
     *
     * @type {boolean}
     * @memberof SessionLogEntity
     */
    hasLog: boolean;
}
export interface SessionLogEntityV2 {
    /**
     * Server-side job identification
     * @type {string}
     * @memberof SessionLogEntity
     */
    id: string;
    /**
     * Used application identification for this job
     * @type {string}
     * @memberof SessionLogEntity
     */
    applicationId: string | undefined;
    /**
     * Used group identification for this job
     * @type {string}
     * @memberof SessionLogEntity
     */
    groupId: string | undefined;
    /**
     * Provided customer identification
     * @type {string}
     * @memberof SessionLogEntity
     */
    customerJobId: string;
    /**
     *
     * @type {string}
     * @memberof SessionLogEntity
     */
    queueTimeFrom: string;
    /**
     *
     * @type {string}
     * @memberof SessionLogEntity
     */
    queueTimeTo: string;
    /**
     *
     * @type {'Unspecified' | 'Starting' | 'TimedOut' | 'Failed' | 'Completed' | 'Rejected' | 'Running'}
     * @memberof SessionLogEntity
     */
    status: 'Unspecified' | 'Starting' | 'TimedOut' | 'Failed' | 'Completed' | 'Rejected' | 'Running';
    /**
     *
     * @type {string}
     * @memberof SessionLogEntity
     */
    completedTime: string | undefined;
}
export declare function getDebugLog(jobId: string, options?: {
    account?: Account;
}): Promise<any>;
export declare function getEntityV2(jobId: string, options?: {
    account?: Account;
}): Promise<SessionLogEntityV2 | undefined>;
export declare function getEntity(jobId: string, options?: {
    account?: Account;
}): Promise<SessionLogEntity>;
export interface SessionLogEntitiesWithCount {
    entites: SessionLogEntity[];
    totalCount: number;
}
export declare function getSessionEntities(fromDate: string | undefined, toDate: string | undefined, taskStatus: TaskStatus, skip: number, take: number, options?: {
    account?: Account;
}): Promise<SessionLogEntitiesWithCount>;
