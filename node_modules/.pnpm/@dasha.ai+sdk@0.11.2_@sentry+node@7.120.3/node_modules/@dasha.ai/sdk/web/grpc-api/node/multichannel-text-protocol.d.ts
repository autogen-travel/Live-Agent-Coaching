import * as base from "./base";
import { Account } from "../../account";
import { Logger } from "../../log";
import { IMultichannelTextProtocolClient, MultichannelMessageStream } from "../types/text-protocol";
import * as sdk_grpc_pb from "./generated/sdk_grpc_pb";
export declare class MultiChannelTextProtocolClient extends base.Client<sdk_grpc_pb.TextProtocolClient> implements IMultichannelTextProtocolClient {
    constructor(account: Account, log: Logger);
    sendOpen(request: {
        jobId: string;
        channelId: string;
        sequenceId: string;
    }): Promise<void>;
    sendFailed(request: {
        jobId: string;
        channelId: string;
        sequenceId: string;
    }): Promise<void>;
    sendText(request: {
        jobId: string;
        text: string;
        channelId: string;
    }): Promise<void>;
    sendClose(request: {
        jobId: string;
        channelId: string;
    }): Promise<void>;
    messageStream(request: {
        jobId: string;
    }): MultichannelMessageStream;
}
