import { Account } from "../account";
import { Logger } from "../log";
import * as base from "./base";
import * as api from "./generated/core/api";
export interface PackageVersionCreateOrUpdate {
    name: string;
    version: string;
    readme?: string | null;
    releaseNotes?: string | null;
    isHidden?: boolean;
}
export declare class PackageVersionApi extends base.Api<api.PackageVersionApi> {
    constructor(account: Account, log: Logger);
    getDescriptions(name: string, skip?: number, take?: number): Promise<import("./generated/core").PackageVersionDescriptionDTO[]>;
    getDescription(name: string, version: string): Promise<import("./generated/core").PackageVersionDescriptionDTO>;
    getDescriptionById(versionId: string): Promise<import("./generated/core").PackageVersionDescriptionDTO>;
    getDescriptionsByDescriptionId(packageId: string, skip?: number, take?: number): Promise<import("./generated/core").PackageVersionDescriptionDTO[]>;
    publish(name: string, version: string): Promise<import("./generated/core").PackageVersionDescriptionDTO>;
    createOrUpdate(request: PackageVersionCreateOrUpdate): Promise<import("./generated/core").PackageVersionDescriptionDTO>;
}
