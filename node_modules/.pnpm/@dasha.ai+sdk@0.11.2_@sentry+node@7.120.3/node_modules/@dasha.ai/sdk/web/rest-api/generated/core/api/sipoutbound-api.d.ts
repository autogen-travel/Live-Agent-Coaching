/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { SIPOutboundAddDTO } from '../models';
import type { SIPOutboundPatchDTO } from '../models';
import type { SIPOutboundResponseDTO } from '../models';
import type { SIPReportResponseDTO } from '../models';
/**
 * SIPOutboundApi - axios parameter creator
 * @export
 */
export declare const SIPOutboundApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundByNameGet: (name: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundGet: (skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {SIPOutboundPatchDTO} [sIPOutboundPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdPatch: (id: string, sIPOutboundPatchDTO?: SIPOutboundPatchDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SIPOutboundAddDTO} [sIPOutboundAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundPost: (sIPOutboundAddDTO?: SIPOutboundAddDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundReportsGet: (fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SIPOutboundApi - functional programming interface
 * @export
 */
export declare const SIPOutboundApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundByNameGet(name: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPOutboundResponseDTO>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundGet(skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SIPOutboundResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPOutboundResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {SIPOutboundPatchDTO} [sIPOutboundPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdPatch(id: string, sIPOutboundPatchDTO?: SIPOutboundPatchDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPOutboundResponseDTO>>;
    /**
     *
     * @param {SIPOutboundAddDTO} [sIPOutboundAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundPost(sIPOutboundAddDTO?: SIPOutboundAddDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPOutboundResponseDTO>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundReportsGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SIPReportResponseDTO>>>;
};
/**
 * SIPOutboundApi - factory interface
 * @export
 */
export declare const SIPOutboundApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundByNameGet(name: string, options?: RawAxiosRequestConfig): AxiosPromise<SIPOutboundResponseDTO>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundGet(skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SIPOutboundResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdDelete(id: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<SIPOutboundResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {SIPOutboundPatchDTO} [sIPOutboundPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundIdPatch(id: string, sIPOutboundPatchDTO?: SIPOutboundPatchDTO, options?: RawAxiosRequestConfig): AxiosPromise<SIPOutboundResponseDTO>;
    /**
     *
     * @param {SIPOutboundAddDTO} [sIPOutboundAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundPost(sIPOutboundAddDTO?: SIPOutboundAddDTO, options?: RawAxiosRequestConfig): AxiosPromise<SIPOutboundResponseDTO>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipOutboundReportsGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SIPReportResponseDTO>>;
};
/**
 * SIPOutboundApi - object-oriented interface
 * @export
 * @class SIPOutboundApi
 * @extends {BaseAPI}
 */
export declare class SIPOutboundApi extends BaseAPI {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundByNameGet(name: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPOutboundResponseDTO, any>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundGet(skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPOutboundResponseDTO[], any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPOutboundResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {SIPOutboundPatchDTO} [sIPOutboundPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundIdPatch(id: string, sIPOutboundPatchDTO?: SIPOutboundPatchDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPOutboundResponseDTO, any>>;
    /**
     *
     * @param {SIPOutboundAddDTO} [sIPOutboundAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundPost(sIPOutboundAddDTO?: SIPOutboundAddDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPOutboundResponseDTO, any>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPOutboundApi
     */
    apiV1SipOutboundReportsGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPReportResponseDTO[], any>>;
}
