/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { PackageContentType } from '../models';
import type { PackageDescriptionCreateOrUpdateDTO } from '../models';
import type { PackageDescriptionDTO } from '../models';
/**
 * PackageDescriptionApi - axios parameter creator
 * @export
 */
export declare const PackageDescriptionApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} packageName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionGet: (packageName: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {PackageContentType} [contentType]
     * @param {string} [ownerId]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionListGet: (contentType?: PackageContentType, ownerId?: string, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} packageDescriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionPackageDescriptionIdGet: (packageDescriptionId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {PackageDescriptionCreateOrUpdateDTO} packageDescriptionCreateOrUpdateDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionPost: (packageDescriptionCreateOrUpdateDTO: PackageDescriptionCreateOrUpdateDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PackageDescriptionApi - functional programming interface
 * @export
 */
export declare const PackageDescriptionApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} packageName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionGet(packageName: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PackageDescriptionDTO>>;
    /**
     *
     * @param {PackageContentType} [contentType]
     * @param {string} [ownerId]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionListGet(contentType?: PackageContentType, ownerId?: string, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PackageDescriptionDTO>>>;
    /**
     *
     * @param {string} packageDescriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionPackageDescriptionIdGet(packageDescriptionId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PackageDescriptionDTO>>;
    /**
     *
     * @param {PackageDescriptionCreateOrUpdateDTO} packageDescriptionCreateOrUpdateDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionPost(packageDescriptionCreateOrUpdateDTO: PackageDescriptionCreateOrUpdateDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PackageDescriptionDTO>>;
};
/**
 * PackageDescriptionApi - factory interface
 * @export
 */
export declare const PackageDescriptionApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} packageName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionGet(packageName: string, options?: RawAxiosRequestConfig): AxiosPromise<PackageDescriptionDTO>;
    /**
     *
     * @param {PackageContentType} [contentType]
     * @param {string} [ownerId]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionListGet(contentType?: PackageContentType, ownerId?: string, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<PackageDescriptionDTO>>;
    /**
     *
     * @param {string} packageDescriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionPackageDescriptionIdGet(packageDescriptionId: string, options?: RawAxiosRequestConfig): AxiosPromise<PackageDescriptionDTO>;
    /**
     *
     * @param {PackageDescriptionCreateOrUpdateDTO} packageDescriptionCreateOrUpdateDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PackagesDescriptionPost(packageDescriptionCreateOrUpdateDTO: PackageDescriptionCreateOrUpdateDTO, options?: RawAxiosRequestConfig): AxiosPromise<PackageDescriptionDTO>;
};
/**
 * PackageDescriptionApi - object-oriented interface
 * @export
 * @class PackageDescriptionApi
 * @extends {BaseAPI}
 */
export declare class PackageDescriptionApi extends BaseAPI {
    /**
     *
     * @param {string} packageName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageDescriptionApi
     */
    apiV1PackagesDescriptionGet(packageName: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PackageDescriptionDTO, any>>;
    /**
     *
     * @param {PackageContentType} [contentType]
     * @param {string} [ownerId]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageDescriptionApi
     */
    apiV1PackagesDescriptionListGet(contentType?: PackageContentType, ownerId?: string, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PackageDescriptionDTO[], any>>;
    /**
     *
     * @param {string} packageDescriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageDescriptionApi
     */
    apiV1PackagesDescriptionPackageDescriptionIdGet(packageDescriptionId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PackageDescriptionDTO, any>>;
    /**
     *
     * @param {PackageDescriptionCreateOrUpdateDTO} packageDescriptionCreateOrUpdateDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PackageDescriptionApi
     */
    apiV1PackagesDescriptionPost(packageDescriptionCreateOrUpdateDTO: PackageDescriptionCreateOrUpdateDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PackageDescriptionDTO, any>>;
}
