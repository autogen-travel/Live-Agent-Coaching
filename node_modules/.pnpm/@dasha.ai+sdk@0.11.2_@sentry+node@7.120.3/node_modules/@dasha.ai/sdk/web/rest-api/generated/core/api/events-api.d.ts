/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { EventsResponseDTO } from '../models';
import type { GetDetailedEventsFiltersRequestDTO } from '../models';
import type { GetDetailedEventsWithFiltersRequestDTO } from '../models';
import type { GetEventsFiltersRequestDTO } from '../models';
import type { GetEventsWithFiltersRequestDTO } from '../models';
import type { IUsageServiceDetailedEntityIFilter } from '../models';
import type { IUsageServiceEntityIFilter } from '../models';
/**
 * EventsApi - axios parameter creator
 * @export
 */
export declare const EventsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {GetDetailedEventsFiltersRequestDTO} [getDetailedEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsDetailedFiltersPost: (getDetailedEventsFiltersRequestDTO?: GetDetailedEventsFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedEventsWithFiltersRequestDTO} [getDetailedEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsDetailedJobsIdsPost: (skip?: number, take?: number, getDetailedEventsWithFiltersRequestDTO?: GetDetailedEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {GetEventsFiltersRequestDTO} [getEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsFiltersPost: (getEventsFiltersRequestDTO?: GetEventsFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetEventsWithFiltersRequestDTO} [getEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsPost: (skip?: number, take?: number, getEventsWithFiltersRequestDTO?: GetEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EventsApi - functional programming interface
 * @export
 */
export declare const EventsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {GetDetailedEventsFiltersRequestDTO} [getDetailedEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsDetailedFiltersPost(getDetailedEventsFiltersRequestDTO?: GetDetailedEventsFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IUsageServiceDetailedEntityIFilter>>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedEventsWithFiltersRequestDTO} [getDetailedEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsDetailedJobsIdsPost(skip?: number, take?: number, getDetailedEventsWithFiltersRequestDTO?: GetDetailedEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    /**
     *
     * @param {GetEventsFiltersRequestDTO} [getEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsFiltersPost(getEventsFiltersRequestDTO?: GetEventsFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IUsageServiceEntityIFilter>>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetEventsWithFiltersRequestDTO} [getEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsPost(skip?: number, take?: number, getEventsWithFiltersRequestDTO?: GetEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EventsResponseDTO>>>;
};
/**
 * EventsApi - factory interface
 * @export
 */
export declare const EventsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {GetDetailedEventsFiltersRequestDTO} [getDetailedEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsDetailedFiltersPost(getDetailedEventsFiltersRequestDTO?: GetDetailedEventsFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<IUsageServiceDetailedEntityIFilter>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedEventsWithFiltersRequestDTO} [getDetailedEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsDetailedJobsIdsPost(skip?: number, take?: number, getDetailedEventsWithFiltersRequestDTO?: GetDetailedEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<string>>;
    /**
     *
     * @param {GetEventsFiltersRequestDTO} [getEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsFiltersPost(getEventsFiltersRequestDTO?: GetEventsFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<IUsageServiceEntityIFilter>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetEventsWithFiltersRequestDTO} [getEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1EventsPost(skip?: number, take?: number, getEventsWithFiltersRequestDTO?: GetEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<EventsResponseDTO>>;
};
/**
 * EventsApi - object-oriented interface
 * @export
 * @class EventsApi
 * @extends {BaseAPI}
 */
export declare class EventsApi extends BaseAPI {
    /**
     *
     * @param {GetDetailedEventsFiltersRequestDTO} [getDetailedEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    apiV1EventsDetailedFiltersPost(getDetailedEventsFiltersRequestDTO?: GetDetailedEventsFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IUsageServiceDetailedEntityIFilter[], any>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedEventsWithFiltersRequestDTO} [getDetailedEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    apiV1EventsDetailedJobsIdsPost(skip?: number, take?: number, getDetailedEventsWithFiltersRequestDTO?: GetDetailedEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    /**
     *
     * @param {GetEventsFiltersRequestDTO} [getEventsFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    apiV1EventsFiltersPost(getEventsFiltersRequestDTO?: GetEventsFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IUsageServiceEntityIFilter[], any>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetEventsWithFiltersRequestDTO} [getEventsWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    apiV1EventsPost(skip?: number, take?: number, getEventsWithFiltersRequestDTO?: GetEventsWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<EventsResponseDTO[], any>>;
}
