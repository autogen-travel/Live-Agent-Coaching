/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { LimitsByApplicationGroupDTO } from '../models';
import type { SIPEndpointAddDTO } from '../models';
import type { SIPEndpointPatchDTO } from '../models';
import type { SIPEndpointResponseDTO } from '../models';
import type { SIPReportResponseDTO } from '../models';
/**
 * SIPEndpointApi - axios parameter creator
 * @export
 */
export declare const SIPEndpointApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointByNameGet: (name: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} alias
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointCapacityByAliasGet: (alias: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} endpointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointCapacityEndpointIdGet: (endpointId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointGet: (skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {SIPEndpointPatchDTO} [sIPEndpointPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdPatch: (id: string, sIPEndpointPatchDTO?: SIPEndpointPatchDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SIPEndpointAddDTO} [sIPEndpointAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointPost: (sIPEndpointAddDTO?: SIPEndpointAddDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} endpointId
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsEndpointIdGet: (endpointId: string, fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsGet: (fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsStatusGet: (fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} alias
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointStatusByAliasGet: (alias: string, errorsThreshold?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} endpointId
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointStatusEndpointIdGet: (endpointId: string, errorsThreshold?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SIPEndpointApi - functional programming interface
 * @export
 */
export declare const SIPEndpointApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointByNameGet(name: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPEndpointResponseDTO>>;
    /**
     *
     * @param {string} alias
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointCapacityByAliasGet(alias: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LimitsByApplicationGroupDTO>>;
    /**
     *
     * @param {string} endpointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointCapacityEndpointIdGet(endpointId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LimitsByApplicationGroupDTO>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointGet(skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SIPEndpointResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPEndpointResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {SIPEndpointPatchDTO} [sIPEndpointPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdPatch(id: string, sIPEndpointPatchDTO?: SIPEndpointPatchDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPEndpointResponseDTO>>;
    /**
     *
     * @param {SIPEndpointAddDTO} [sIPEndpointAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointPost(sIPEndpointAddDTO?: SIPEndpointAddDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SIPEndpointResponseDTO>>;
    /**
     *
     * @param {string} endpointId
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsEndpointIdGet(endpointId: string, fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SIPReportResponseDTO>>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SIPReportResponseDTO>>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsStatusGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>>;
    /**
     *
     * @param {string} alias
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointStatusByAliasGet(alias: string, errorsThreshold?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} endpointId
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointStatusEndpointIdGet(endpointId: string, errorsThreshold?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * SIPEndpointApi - factory interface
 * @export
 */
export declare const SIPEndpointApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointByNameGet(name: string, options?: RawAxiosRequestConfig): AxiosPromise<SIPEndpointResponseDTO>;
    /**
     *
     * @param {string} alias
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointCapacityByAliasGet(alias: string, options?: RawAxiosRequestConfig): AxiosPromise<LimitsByApplicationGroupDTO>;
    /**
     *
     * @param {string} endpointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointCapacityEndpointIdGet(endpointId: string, options?: RawAxiosRequestConfig): AxiosPromise<LimitsByApplicationGroupDTO>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointGet(skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SIPEndpointResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdDelete(id: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<SIPEndpointResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {SIPEndpointPatchDTO} [sIPEndpointPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointIdPatch(id: string, sIPEndpointPatchDTO?: SIPEndpointPatchDTO, options?: RawAxiosRequestConfig): AxiosPromise<SIPEndpointResponseDTO>;
    /**
     *
     * @param {SIPEndpointAddDTO} [sIPEndpointAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointPost(sIPEndpointAddDTO?: SIPEndpointAddDTO, options?: RawAxiosRequestConfig): AxiosPromise<SIPEndpointResponseDTO>;
    /**
     *
     * @param {string} endpointId
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsEndpointIdGet(endpointId: string, fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SIPReportResponseDTO>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<SIPReportResponseDTO>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointReportsStatusGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, options?: RawAxiosRequestConfig): AxiosPromise<number>;
    /**
     *
     * @param {string} alias
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointStatusByAliasGet(alias: string, errorsThreshold?: number, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} endpointId
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SipEndpointStatusEndpointIdGet(endpointId: string, errorsThreshold?: number, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * SIPEndpointApi - object-oriented interface
 * @export
 * @class SIPEndpointApi
 * @extends {BaseAPI}
 */
export declare class SIPEndpointApi extends BaseAPI {
    /**
     *
     * @param {string} name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointByNameGet(name: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPEndpointResponseDTO, any>>;
    /**
     *
     * @param {string} alias
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointCapacityByAliasGet(alias: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LimitsByApplicationGroupDTO, any>>;
    /**
     *
     * @param {string} endpointId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointCapacityEndpointIdGet(endpointId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LimitsByApplicationGroupDTO, any>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointGet(skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPEndpointResponseDTO[], any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPEndpointResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {SIPEndpointPatchDTO} [sIPEndpointPatchDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointIdPatch(id: string, sIPEndpointPatchDTO?: SIPEndpointPatchDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPEndpointResponseDTO, any>>;
    /**
     *
     * @param {SIPEndpointAddDTO} [sIPEndpointAddDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointPost(sIPEndpointAddDTO?: SIPEndpointAddDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPEndpointResponseDTO, any>>;
    /**
     *
     * @param {string} endpointId
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointReportsEndpointIdGet(endpointId: string, fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPReportResponseDTO[], any>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointReportsGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SIPReportResponseDTO[], any>>;
    /**
     *
     * @param {string} [fromCreatedTime]
     * @param {string} [toCreatedTime]
     * @param {number} [fromStatus]
     * @param {number} [toStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointReportsStatusGet(fromCreatedTime?: string, toCreatedTime?: string, fromStatus?: number, toStatus?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<number, any>>;
    /**
     *
     * @param {string} alias
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointStatusByAliasGet(alias: string, errorsThreshold?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} endpointId
     * @param {number} [errorsThreshold]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SIPEndpointApi
     */
    apiV1SipEndpointStatusEndpointIdGet(endpointId: string, errorsThreshold?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
