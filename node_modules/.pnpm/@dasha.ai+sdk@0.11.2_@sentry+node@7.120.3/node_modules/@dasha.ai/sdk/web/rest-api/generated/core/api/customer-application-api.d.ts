/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CustomerApplicationResponseDTO } from '../models';
/**
 * CustomerApplicationApi - axios parameter creator
 * @export
 */
export declare const CustomerApplicationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {string} [applicationName]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsGet: (skip?: number, take?: number, applicationName?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsIdPackageGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CustomerApplicationApi - functional programming interface
 * @export
 */
export declare const CustomerApplicationApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {string} [applicationName]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsGet(skip?: number, take?: number, applicationName?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<CustomerApplicationResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CustomerApplicationResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsIdPackageGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * CustomerApplicationApi - factory interface
 * @export
 */
export declare const CustomerApplicationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {string} [applicationName]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsGet(skip?: number, take?: number, applicationName?: string, options?: RawAxiosRequestConfig): AxiosPromise<Array<CustomerApplicationResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<CustomerApplicationResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ApplicationsIdPackageGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<string>;
};
/**
 * CustomerApplicationApi - object-oriented interface
 * @export
 * @class CustomerApplicationApi
 * @extends {BaseAPI}
 */
export declare class CustomerApplicationApi extends BaseAPI {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {string} [applicationName]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerApplicationApi
     */
    apiV1ApplicationsGet(skip?: number, take?: number, applicationName?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CustomerApplicationResponseDTO[], any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerApplicationApi
     */
    apiV1ApplicationsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CustomerApplicationResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerApplicationApi
     */
    apiV1ApplicationsIdPackageGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<string, any>>;
}
