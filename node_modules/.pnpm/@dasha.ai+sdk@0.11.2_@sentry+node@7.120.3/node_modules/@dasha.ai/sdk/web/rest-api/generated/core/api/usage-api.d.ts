/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { BillableUsageResponseDTO } from '../models';
import type { GetDetailedUsageFiltersRequestDTO } from '../models';
import type { GetDetailedUsageWithFiltersRequestDTO } from '../models';
import type { GetUsageFiltersRequestDTO } from '../models';
import type { GetUsageWithFiltersRequestDTO } from '../models';
import type { IUsageServiceDetailedEntityIFilter } from '../models';
import type { IUsageServiceEntityIFilter } from '../models';
/**
 * UsageApi - axios parameter creator
 * @export
 */
export declare const UsageApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageBillableJobIdGet: (jobId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetUsageWithFiltersRequestDTO} [getUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageBillablePost: (skip?: number, take?: number, getUsageWithFiltersRequestDTO?: GetUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedUsageWithFiltersRequestDTO} [getDetailedUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageDetailedBillableJobsIdsPost: (skip?: number, take?: number, getDetailedUsageWithFiltersRequestDTO?: GetDetailedUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {GetDetailedUsageFiltersRequestDTO} [getDetailedUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageDetailedFiltersPost: (getDetailedUsageFiltersRequestDTO?: GetDetailedUsageFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {GetUsageFiltersRequestDTO} [getUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageFiltersPost: (getUsageFiltersRequestDTO?: GetUsageFiltersRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UsageApi - functional programming interface
 * @export
 */
export declare const UsageApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageBillableJobIdGet(jobId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BillableUsageResponseDTO>>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetUsageWithFiltersRequestDTO} [getUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageBillablePost(skip?: number, take?: number, getUsageWithFiltersRequestDTO?: GetUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BillableUsageResponseDTO>>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedUsageWithFiltersRequestDTO} [getDetailedUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageDetailedBillableJobsIdsPost(skip?: number, take?: number, getDetailedUsageWithFiltersRequestDTO?: GetDetailedUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
    /**
     *
     * @param {GetDetailedUsageFiltersRequestDTO} [getDetailedUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageDetailedFiltersPost(getDetailedUsageFiltersRequestDTO?: GetDetailedUsageFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IUsageServiceDetailedEntityIFilter>>>;
    /**
     *
     * @param {GetUsageFiltersRequestDTO} [getUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageFiltersPost(getUsageFiltersRequestDTO?: GetUsageFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IUsageServiceEntityIFilter>>>;
};
/**
 * UsageApi - factory interface
 * @export
 */
export declare const UsageApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageBillableJobIdGet(jobId: string, options?: RawAxiosRequestConfig): AxiosPromise<Array<BillableUsageResponseDTO>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetUsageWithFiltersRequestDTO} [getUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageBillablePost(skip?: number, take?: number, getUsageWithFiltersRequestDTO?: GetUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<BillableUsageResponseDTO>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedUsageWithFiltersRequestDTO} [getDetailedUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageDetailedBillableJobsIdsPost(skip?: number, take?: number, getDetailedUsageWithFiltersRequestDTO?: GetDetailedUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<string>>;
    /**
     *
     * @param {GetDetailedUsageFiltersRequestDTO} [getDetailedUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageDetailedFiltersPost(getDetailedUsageFiltersRequestDTO?: GetDetailedUsageFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<IUsageServiceDetailedEntityIFilter>>;
    /**
     *
     * @param {GetUsageFiltersRequestDTO} [getUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1UsageFiltersPost(getUsageFiltersRequestDTO?: GetUsageFiltersRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<Array<IUsageServiceEntityIFilter>>;
};
/**
 * UsageApi - object-oriented interface
 * @export
 * @class UsageApi
 * @extends {BaseAPI}
 */
export declare class UsageApi extends BaseAPI {
    /**
     *
     * @param {string} jobId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsageApi
     */
    apiV1UsageBillableJobIdGet(jobId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BillableUsageResponseDTO[], any>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetUsageWithFiltersRequestDTO} [getUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsageApi
     */
    apiV1UsageBillablePost(skip?: number, take?: number, getUsageWithFiltersRequestDTO?: GetUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BillableUsageResponseDTO[], any>>;
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {GetDetailedUsageWithFiltersRequestDTO} [getDetailedUsageWithFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsageApi
     */
    apiV1UsageDetailedBillableJobsIdsPost(skip?: number, take?: number, getDetailedUsageWithFiltersRequestDTO?: GetDetailedUsageWithFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<string[], any>>;
    /**
     *
     * @param {GetDetailedUsageFiltersRequestDTO} [getDetailedUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsageApi
     */
    apiV1UsageDetailedFiltersPost(getDetailedUsageFiltersRequestDTO?: GetDetailedUsageFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IUsageServiceDetailedEntityIFilter[], any>>;
    /**
     *
     * @param {GetUsageFiltersRequestDTO} [getUsageFiltersRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsageApi
     */
    apiV1UsageFiltersPost(getUsageFiltersRequestDTO?: GetUsageFiltersRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IUsageServiceEntityIFilter[], any>>;
}
