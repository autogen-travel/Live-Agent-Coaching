/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { AgentCreateRequestDTO } from '../models';
import type { AgentResponseDTO } from '../models';
import type { AgentUpdateDTO } from '../models';
import type { HiddenStateEnum } from '../models';
/**
 * AgentApi - axios parameter creator
 * @export
 */
export declare const AgentApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {HiddenStateEnum} [hiddenState]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsGet: (hiddenState?: HiddenStateEnum, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {AgentUpdateDTO} [agentUpdateDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsIdPatch: (id: string, agentUpdateDTO?: AgentUpdateDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {AgentCreateRequestDTO} [agentCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsPost: (agentCreateRequestDTO?: AgentCreateRequestDTO, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AgentApi - functional programming interface
 * @export
 */
export declare const AgentApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {HiddenStateEnum} [hiddenState]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsGet(hiddenState?: HiddenStateEnum, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AgentResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {AgentUpdateDTO} [agentUpdateDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsIdPatch(id: string, agentUpdateDTO?: AgentUpdateDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentResponseDTO>>;
    /**
     *
     * @param {AgentCreateRequestDTO} [agentCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsPost(agentCreateRequestDTO?: AgentCreateRequestDTO, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentResponseDTO>>;
};
/**
 * AgentApi - factory interface
 * @export
 */
export declare const AgentApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {HiddenStateEnum} [hiddenState]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsGet(hiddenState?: HiddenStateEnum, skip?: number, take?: number, options?: RawAxiosRequestConfig): AxiosPromise<Array<AgentResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsIdGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<AgentResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {AgentUpdateDTO} [agentUpdateDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsIdPatch(id: string, agentUpdateDTO?: AgentUpdateDTO, options?: RawAxiosRequestConfig): AxiosPromise<AgentResponseDTO>;
    /**
     *
     * @param {AgentCreateRequestDTO} [agentCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AgentsPost(agentCreateRequestDTO?: AgentCreateRequestDTO, options?: RawAxiosRequestConfig): AxiosPromise<AgentResponseDTO>;
};
/**
 * AgentApi - object-oriented interface
 * @export
 * @class AgentApi
 * @extends {BaseAPI}
 */
export declare class AgentApi extends BaseAPI {
    /**
     *
     * @param {HiddenStateEnum} [hiddenState]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentApi
     */
    apiV1AgentsGet(hiddenState?: HiddenStateEnum, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentResponseDTO[], any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentApi
     */
    apiV1AgentsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentResponseDTO, any>>;
    /**
     *
     * @param {string} id
     * @param {AgentUpdateDTO} [agentUpdateDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentApi
     */
    apiV1AgentsIdPatch(id: string, agentUpdateDTO?: AgentUpdateDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentResponseDTO, any>>;
    /**
     *
     * @param {AgentCreateRequestDTO} [agentCreateRequestDTO]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentApi
     */
    apiV1AgentsPost(agentCreateRequestDTO?: AgentCreateRequestDTO, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentResponseDTO, any>>;
}
