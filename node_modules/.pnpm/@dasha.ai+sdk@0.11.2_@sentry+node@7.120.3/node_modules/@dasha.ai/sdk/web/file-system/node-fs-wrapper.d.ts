import { Logger } from "../log";
import { FileSystemWrapper, BufferEncoding } from "./file-system-wrapper";
export declare class NodeFsWrapper implements FileSystemWrapper {
    readonly canUseSymLink = true;
    private _log;
    constructor(log: Logger);
    writeFile(path: string, content: any, options?: {
        encoding?: BufferEncoding;
        mode?: string;
        flag?: string | number;
    }): Promise<void>;
    readFile(path: string, options?: {
        encoding?: BufferEncoding;
        flag?: string | number;
    }): Promise<string>;
    mkdir(path: string, options: {
        recursive: boolean;
    }): Promise<void>;
    rmdir(path: string, options: {
        recursive: boolean;
    }): Promise<void>;
    unlink(path: string): Promise<void>;
    stat(path: string): Promise<{
        isDirectory: boolean;
        isFile: boolean;
        isSymbolicLink: boolean;
    } | undefined>;
    symlink(sourcePath: string, destanationPath: string): Promise<void>;
    dirlength(path: string): Promise<number>;
    rmLogged(path: string): Promise<void>;
    mkdirLogged(path: string): Promise<void>;
}
