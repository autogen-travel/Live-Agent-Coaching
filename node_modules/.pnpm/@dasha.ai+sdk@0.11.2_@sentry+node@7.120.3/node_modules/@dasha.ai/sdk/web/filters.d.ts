import * as models from "./rest-api/generated/core/models";
export type IFilter = models.IUsageServiceEntityIFilter;
export declare class ApplicationNamesFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(appNames: string[]);
}
export declare class EventTypeFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(eventTypes: string[]);
}
export declare class UsageTypesFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(usageTypes: string[]);
}
export declare class UsageSubTypesFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(usageSubTypes: string[]);
}
export declare class CustomerIdsFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(customerIds: string[]);
}
export declare class JobIdsFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(jobIds: string[]);
}
export declare class IdsFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(ids: string[]);
}
export declare class TimeStampRangeFilter implements IFilter {
    type: models.FilterName;
    startDate: string | undefined;
    endDate: string | undefined;
    constructor(startDate: string | undefined, endDate: string | undefined);
    static fromDate(startDate: Date, endDate: Date, timezoneoffset?: string): TimeStampRangeFilter;
}
export declare class DateRangeFilter implements IFilter {
    type: models.FilterName;
    startDate: string | undefined;
    endDate: string | undefined;
    constructor(startDate: Date | undefined, endDate: Date | undefined);
}
export declare class StartedTimeFilter implements IFilter {
    type: models.FilterName;
    startedTime: string | undefined;
    endTime: string | undefined;
    private convert;
    constructor(startDateTime: Date | undefined, endDateTime: Date | undefined);
}
export declare class JobStatusesFilter implements IFilter {
    type: models.FilterName;
    values: string[];
    constructor(taskStatus: string[]);
}
